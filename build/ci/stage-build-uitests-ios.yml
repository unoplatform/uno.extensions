jobs:
- job: iOS_Tests
  displayName: 'iOS UI Tests'
  timeoutInMinutes: 90
  variables:
    CI_Build: true
    SourceLinkEnabled: false

  pool:
    vmImage: 'macos-14'

  steps:
  - checkout: self
    clean: true

  - template: templates/dotnet-install-mac.yml

  - template: templates/xcode-select.yml
    parameters:
      xCodeRoot: '/Applications/Xcode_15.2.app'

  - template: templates/canary-updater.yml

  - bash: |
      chmod +x $(build.sourcesdirectory)/build/ci/scripts/ios-uitest-run.sh
      $(build.sourcesdirectory)/build/ci/scripts/ios-uitest-run.sh
    displayName: Build and Run iOS Test
    env:
      BUILD_SOURCESDIRECTORY: "$(build.sourcesdirectory)"
      BUILD_ARTIFACTSTAGINGDIRECTORY: "$(build.artifactstagingdirectory)"

  - task: PublishTestResults@2
    condition: always()
    retryCountOnTaskFailure: 2
    inputs:
      testRunTitle: 'iOS Test Run'
      testResultsFormat: 'NUnit'
      testResultsFiles: '$(build.sourcesdirectory)/build/TestResult.xml'
      failTaskOnFailedTests: true
      failTaskOnMissingResultsFile: true

  - task: PublishBuildArtifacts@1
    condition: always()
    retryCountOnTaskFailure: 2
    inputs:
      PathtoPublish: $(build.artifactstagingdirectory)
      ArtifactName: uno-uitest-tests
      ArtifactType: Container

  - task: PublishBuildArtifacts@1
    condition: always()
    retryCountOnTaskFailure: 2
    inputs:
      PathtoPublish: $(build.sourcesdirectory)/testing/TestHarness/TestHarness/bin/Release/net8.0-ios/iossimulator-x64/TestHarnessApp.app
      ArtifactName: uno-uitest-ios-bin
      ArtifactType: Container
