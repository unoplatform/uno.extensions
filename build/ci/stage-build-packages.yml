jobs:
- job: Packages
  timeoutInMinutes: 90

  pool:
    vmImage: 'windows-2022'

  variables:
    - group: uno-codesign-vault

  steps:
  - checkout: self
    clean: 'true'

  - template: templates/dotnet-install-windows.yml
  - template: templates/canary-updater.yml
  - template: templates/gitversion.yml

  # - powershell: |
  #     dotnet tool update -g dotnet-vs
  #     $MSBUILDPATH="$(vs where release --prop=InstallationPath)\MSBuild\Current\Bin"
  #     Write-Host "##vso[task.setvariable variable=MSBUILDPATH;]$MSBUILDPATH"
  #     echo MSBUILDPATH: $MSBUILDPATH
  #   displayName: Setup VS17 Path

  # - template: templates/install-windows-sdk.yml
  #   parameters:
  #     sdkVersion: 19041

  # - template: templates/update-vs-components.yml

  - task: MSBuild@1
    displayName: Build Extensions Packages
    inputs:
      solution: Uno.Extensions-packageonly.slnf
      msbuildArchitecture: x86
      msbuildArguments: /r /m /v:m /p:Configuration=Release "/p:PackageOutputPath=$(build.artifactstagingdirectory)" "/p:PackageVersion=$(NBGV_SemVer2)" "/p:InformationalVersion=$(NBGV_InformationalVersion)"  /detailedsummary /bl:$(build.artifactstagingdirectory)/build-packages.binlog
      clean: false
      maximumCpuCount: true
      restoreNugetPackages: false
      logProjectEvents: false
      createLogFile: false

  - task: VisualStudioTestPlatformInstaller@1
    displayName: 'Visual Studio Test Platform Installer'
    inputs:
      versionSelector: specificVersion
      testPlatformVersion: 17.5.0

  - task: UseDotNet@2
    displayName: 'Use .NET SDK'
    retryCountOnTaskFailure: 3
    inputs:
      packageType: sdk
      version: 8.0.301

  - task: VSTest@2
    inputs:
      testAssemblyVer2: |
        **/*.Tests.dll
        !**/*UI.Tests.dll
        !**/obj/**
      vsTestVersion: toolsInstaller
      testSelector: testAssemblies
      runSettingsFile: build/tests.runsettings
      

  - task: PowerShell@2
    displayName: Authenticode Sign Packages
    inputs:
      filePath: build/Sign-Package.ps1
    env:
      VaultSignTenantId: $(VaultSignTenantId)
      VaultSignClientId: $(VaultSignClientId)
      VaultSignClientSecret: $(VaultSignClientSecret)
      VaultSignCertificate: $(VaultSignCertificate)
      VaultSignUrl: $(VaultSignUrl)
      SignPackageName: "Uno.PackageDiff"
      SignPackageDescription: "Uno.PackageDiff"
      ArtifactDirectory: $(build.artifactstagingdirectory)
    condition: and(succeeded(), not(eq(variables['build.reason'], 'PullRequest')), not(eq(variables['VaultSignClientSecret'], '')), not(eq(variables['VaultSignClientId'], '')))

  - task: PublishBuildArtifacts@1
    condition: always()
    inputs:
        ArtifactName: NuGet_Packages
