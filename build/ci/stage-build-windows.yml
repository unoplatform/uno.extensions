parameters:
  solution: ''
  solutionName: ''

jobs:
- job: Samples_Windows_${{parameters.solutionName}}
  displayName: 'Samples - Windows (${{parameters.solutionName}})'
  timeoutInMinutes: 90

  pool:
    vmImage: 'windows-2022'

  steps:
  - checkout: self
    clean: 'true'

  - template: templates/dotnet-install-windows.yml
  - template: templates/canary-updater.yml
  - template: templates/gitversion.yml

  - powershell: |
      dotnet tool update -g dotnet-vs
      $MSBUILDPATH="$(vs where release --prop=InstallationPath)\MSBuild\Current\Bin"
      Write-Host "##vso[task.setvariable variable=MSBUILDPATH;]$MSBUILDPATH"
      echo MSBUILDPATH: $MSBUILDPATH
    displayName: Setup VS17 Path

  # - template: templates/install-windows-sdk.yml
  #   parameters:
  #     sdkVersion: 19041

  - template: templates/update-vs-components.yml

  - task: MSBuild@1
    displayName: Build Samples
    inputs:
      solution: ${{parameters.solution}}
      msbuildArchitecture: x86
      msbuildArguments: /m /v:m /r /p:Configuration=Release "/p:InformationalVersion=$(NBGV_InformationalVersion)" /p:GeneratePackageOnBuild=false /p:AotAssemblies=false /p:UseWebAssemblyAOT=false /detailedsummary /bl:$(build.artifactstagingdirectory)/samples-windows-${{parameters.solutionName}}.binlog
      clean: false
      maximumCpuCount: true
      restoreNugetPackages: false
      logProjectEvents: false
      createLogFile: false

  - task: VisualStudioTestPlatformInstaller@1
    displayName: 'Visual Studio Test Platform Installer'
    inputs:
      versionSelector: specificVersion
      testPlatformVersion: 17.1.0

  - task: VSTest@2
    inputs:
      testAssemblyVer2: |
        **/*test*.dll
        !**/*UItest*.dll
        !**/obj/**
      vsTestVersion: toolsInstaller
      testSelector: testAssemblies

  - task: PowerShell@2
    displayName: Authenticode Sign Packages
    inputs:
      filePath: build/Sign-Package.ps1
    env:
      SignClientUser: $(SignClientUser)
      SignClientSecret: $(SignClientSecret)
      SignPackageName: "Uno.PackageDiff"
      SignPackageDescription: "Uno.PackageDiff"
      ArtifactDirectory: $(build.artifactstagingdirectory)
    condition: and(succeeded(), not(eq(variables['build.reason'], 'PullRequest')), not(eq(variables['SignClientSecret'], '')), not(eq(variables['SignClientUser'], '')))

  - task: PublishBuildArtifacts@1
    condition: always()
    inputs:
        ArtifactName: $(Build.DefinitionName)
