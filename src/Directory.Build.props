<Project ToolsVersion="15.0">
	<Import Project="..\Directory.Build.props" />

	<PropertyGroup>
		<PackageProjectUrl>https://github.com/unoplatform/uno.extensions</PackageProjectUrl>
		<Description>Extensions to accelerate your application development with Uno Platform, UWP and WinUI</Description>
		<Version>255.255.255.255</Version><!-- Version management is now done through NuGet, this avoids issues related version mismatch -->
		<GenerateDocumentationFile>True</GenerateDocumentationFile>

		<AutoGenerateBindingRedirects>true</AutoGenerateBindingRedirects>
		<GenerateBindingRedirectsOutputType>true</GenerateBindingRedirectsOutputType>

		<LangVersion>10.0</LangVersion>
		<Nullable>enable</Nullable>
		<TreatWarningsAsErrors>true</TreatWarningsAsErrors>
		<NoWarn>$(NoWarn);NU5104;NU5100;NU5118;NU5123;NU1603;CS1701;CS1702;XA0101;MSB3277;CS8785;CS8669;CS1998;NU1507</NoWarn>

		<DebugType>portable</DebugType>
		<DebugSymbols>True</DebugSymbols>
		<ManagePackageVersionsCentrally>true</ManagePackageVersionsCentrally>

		<!-- Ensures the .xr.xml files are generated in a proper layout folder -->
		<GenerateLibraryLayout>true</GenerateLibraryLayout>
		<ImplicitUsings>true</ImplicitUsings>
	</PropertyGroup>

	<PropertyGroup Condition="'$(Configuration)'=='Release'">
		<GeneratePackageOnBuild>true</GeneratePackageOnBuild>
	</PropertyGroup>

	<PropertyGroup Condition="'$(Configuration)'=='Debug'">
		<WarningsNotAsErrors>$(WarningsNotAsErrors);CS1591</WarningsNotAsErrors>
		<!-- This is required to prevent XamlParseException when using Debug packages for local
			debugging (see https://github.com/microsoft/microsoft-ui-xaml/issues/6452) -->
		<DisableEmbeddedXbf>false</DisableEmbeddedXbf>
	</PropertyGroup>

	<PropertyGroup>
		<IsMonoAndroid>false</IsMonoAndroid>
		<IsMonoAndroid Condition="$(TargetFramework.ToLower().StartsWith('monoandroid'))">true</IsMonoAndroid>

		<IsXamarinIOS>false</IsXamarinIOS>
		<IsXamarinIOS Condition="$(TargetFramework.ToLower().StartsWith('xamarinios'))">true</IsXamarinIOS>

		<IsXamarinMac>false</IsXamarinMac>
		<IsXamarinMac Condition="$(TargetFramework.ToLower().StartsWith('xamarinmac'))">true</IsXamarinMac>

		<_IsAndroid>false</_IsAndroid>
		<_IsAndroid Condition="$(IsMonoAndroid) or $([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'android'">true</_IsAndroid>

		<_IsCatalyst>false</_IsCatalyst>
		<_IsCatalyst Condition="$(_IsCatalyst) or $([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'maccatalyst'">true</_IsCatalyst>

		<_IsIOS>false</_IsIOS>
		<_IsIOS Condition="$(IsXamarinIOS) or $([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'ios'">true</_IsIOS>

		<_IsMacOS>false</_IsMacOS>
		<_IsMacOS Condition="$(IsXamarinMac) or $([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'macos'">true</_IsMacOS>

		<_IsNet>false</_IsNet>
		<_IsNet Condition="'$(TargetFramework)'=='net461'">true</_IsNet>

		<_IsNetCore>false</_IsNetCore>
		<_IsNetCore Condition="'$(TargetFramework)'=='net5.0'">true</_IsNetCore>

		<_IsNetStd>false</_IsNetStd>
		<_IsNetStd Condition="'$(TargetFramework)'=='netstandard2.0' or $(_IsNetCore)">true</_IsNetStd>

		<_IsUWP>false</_IsUWP>
		<_IsUWP Condition="$(TargetFramework.StartsWith('uap'))">true</_IsUWP>

		<_IsWinUI>false</_IsWinUI>
		<_IsWinUI Condition="$(TargetFramework.Contains('windows10'))">true</_IsWinUI>
	</PropertyGroup>

	<PropertyGroup Condition="$(_IsIOS)">
		<DefineConstants>$(DefineConstants);IOS1_0;XAMARIN;XAMARIN_IOS;XAMARIN_IOS_UNIFIED</DefineConstants>
		<SupportedOSPlatformVersion>10.0</SupportedOSPlatformVersion>
		<TargetPlatformMinVersion>10.0</TargetPlatformMinVersion>
	</PropertyGroup>

	<PropertyGroup Condition="$(_IsMacOS)">
		<DefineConstants>$(DefineConstants);XAMARIN</DefineConstants>
		<SupportedOSPlatformVersion>10.14</SupportedOSPlatformVersion>
		<TargetPlatformMinVersion>10.14</TargetPlatformMinVersion>
	</PropertyGroup>

	<ItemGroup>
		<None Include="build\Package.props" Pack="true" PackagePath="buildTransitive\$(PackageId).props" Condition="exists('build\Package.props')"/>
		<None Include="build\Package.targets" Pack="true" PackagePath="buildTransitive\$(PackageId).targets" Condition="exists('build\Pacakge.targets')"/>
	</ItemGroup>

	<ItemGroup Condition="'$(TargetFramework)'=='xamarinmac20'">
		<!-- Note: We don't use the $(_IsMacOS) condition and this ref is not needed for net6.0-macos and will cause some MSB3243 -->
		<Reference Include="netstandard" />
	</ItemGroup>

	<PropertyGroup Condition="$(_IsCatalyst)">
		<DefineConstants>$(DefineConstants);XAMARIN</DefineConstants>
		<SupportedOSPlatformVersion>13.1</SupportedOSPlatformVersion>
		<TargetPlatformMinVersion>13.1</TargetPlatformMinVersion>
	</PropertyGroup>

	<PropertyGroup Condition="$(_IsAndroid)">
		<DefineConstants>$(DefineConstants);__ANDROID__;XAMARIN;MONOANDROID5_0;XAMARIN_ANDROID</DefineConstants>
		<SupportedOSPlatformVersion>21.0</SupportedOSPlatformVersion>
		<TargetPlatformMinVersion>21.0</TargetPlatformMinVersion>
	</PropertyGroup>

	<PropertyGroup Condition="$(_IsUWP)">
		<DefineConstants>$(DefineConstants);__WINDOWS__</DefineConstants>
		<TargetPlatformVersion>10.0.19041.0</TargetPlatformVersion>
	</PropertyGroup>

	<PropertyGroup Condition="$(_IsWinUI)">
		<DefineConstants>$(DefineConstants);__WINDOWS__</DefineConstants>
	</PropertyGroup>

	<PropertyGroup>
		<IsCoreProject>False</IsCoreProject>
		<IsCoreProject Condition="$(MSBuildProjectName.Contains('Uno.Extensions.Core'))">True</IsCoreProject>

		<IsTestProject>False</IsTestProject>
		<IsTestProject Condition="$(MSBuildProjectName.Contains('Test')) And !$(MSBuildProjectName.Contains('Testing'))">True</IsTestProject>

		<IsSampleProject>False</IsSampleProject>
		<IsSampleProject Condition="$(MSBuildProjectName.Contains('Sample'))">True</IsSampleProject>

		<IsGeneratorProject>False</IsGeneratorProject>
		<IsGeneratorProject Condition="$(MSBuildProjectName.Contains('Generator'))">True</IsGeneratorProject>
	</PropertyGroup>

	<Choose>
		<When Condition="$(IsTestProject) Or $(IsSampleProject)">
			<PropertyGroup>
				<GenerateDocumentationFile>False</GenerateDocumentationFile>
				<NoWarn>$(NoWarn);CS1591</NoWarn>
			</PropertyGroup>
		</When>
	</Choose>

	<Choose>
		<When Condition="'$(IsTestProject)' != 'true' and '$(SourceLinkEnabled)' != 'false' and '$(IsSampleProject)' != 'true'">
			<PropertyGroup>
				<!-- Optional: Declare that the Repository URL can be published to NuSpec -->
				<PublishRepositoryUrl>true</PublishRepositoryUrl>
				<!-- Optional: Embed source files that are not tracked by the source control manager to the PDB -->
				<EmbedUntrackedSources>true</EmbedUntrackedSources>
				<!-- Optional: Include PDB in the built .nupkg -->
				<AllowedOutputExtensionsInPackageBuildOutputFolder>$(AllowedOutputExtensionsInPackageBuildOutputFolder);.pdb</AllowedOutputExtensionsInPackageBuildOutputFolder>
			</PropertyGroup>
			<ItemGroup>
				<PackageReference Include="Microsoft.SourceLink.GitHub" PrivateAssets="All"/>
				<PackageReference Include="DotNet.ReproducibleBuilds" PrivateAssets="All" />
			</ItemGroup>
		</When>
	</Choose>

	<!--
		Adjust the output paths for runtime project in order for those
		projects to stay in the same folder as the original reference one.
	-->
	<PropertyGroup>
		<BaseOutputPath>bin\$(MSBuildProjectName)</BaseOutputPath>
		<BaseIntermediateOutputPath>obj\$(MSBuildProjectName)</BaseIntermediateOutputPath>
		<DefaultItemExcludes>$(DefaultItemExcludes);obj/**;bin/**</DefaultItemExcludes>
	</PropertyGroup>

	<Import Project="Uno.CrossTargeting.props" />

</Project>
